#include <iostream>
#include <cassert>
#include <cmath>	// for sqrt, fabs
#include <cfloat>	// for DBL_MAX
#include <cstdlib>	// for rand, srand
#include <ctime>	// for rand seed
#include <fstream>
#include <cstdio>	// for EOF
#include <string>
#include <vector>  // for vector distance calcs

struct point
{
	static int d;
	double *coords;

	point() //init
	{ 
		//this->coords = new double[d]; // The original

		this->coords = new double[d](); //This works, because fancy c++ magic


		//this->coords[d] = { 0 };   // First attempt, it either does nothing or fill the array with junk
	}

	~point()  //destructor
	{
		delete[] coords; // Added this to hopefully remove the array once the point class/object is gone
	}

	void print()
	{
		for (size_t i = d-1; i > 0; i--)   // changed "i = d" to "i = d-1"
			std::cout << coords[i] << " ";
		std::cout << coords[0];
	}
};

int point::d = 4;  // Set this to 4 so I can see what prints, less imagining this way (only for testing).

int main() {
	

	point p;

	p.print();

	std::cout << "\n";

	system("pause");
	return 0;
}
